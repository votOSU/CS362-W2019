        -:    0:Source:randomtestcard2.c
        -:    0:Graph:randomtestcard2.gcno
        -:    0:Data:randomtestcard2.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:
        -:    2:/*
        -:    3: *  * 	Random testing for assignment 4.  
        -:    4: *   * 		This is a card test for the isGameOver() from previous unit test in assignment 3
        -:    5: *    * 		*/
        -:    6:
        -:    7:
        -:    8:#include "dominion.h"
        -:    9:#include "dominion_helpers.h"
        -:   10:#include <stdio.h>
        -:   11:#include <stdlib.h>
        -:   12:#include <string.h> 
        -:   13:#include <assert.h>
        -:   14:#include "rngs.h"
        -:   15:
        -:   16:
        1:   17:int main() 
        -:   18:{
        -:   19:    	int testResult, randNum;
        1:   20:    	int seedNum = 400;
        1:   21:    	int failFlag = 0;
        -:   22:    	struct gameState gs; 
        1:   23:    	int k[10] = {adventurer, council_room, feast, gardens, mine,
        -:   24:                    remodel, smithy, village, baron, great_hall};
        -:   25:
        1:   26:    	printf("Now Randomly Testing isGameOver():\n\n");
        -:   27:
        -:   28:	//Test Pass if random number is not 2, 3, or 4 
      101:   29:	for (int i = 0; i < 100; i++)
        -:   30:	{
        -:   31:		do
        -:   32:		{
      109:   33:			randNum = rand() % 10;	
      109:   34:		}while(randNum < 1);
      100:   35:		printf("Random NUM is: %d\n",randNum);
      100:   36:		testResult = initializeGame(randNum, k, seedNum, &gs);
        -:   37:		//printf("TestREsult is: %d\n",testResult);
      100:   38:		if (testResult == -1)
        -:   39:		{
       65:   40:			printf("Test passed, number of Player is 1 or greater than 4. No Game\n");
       65:   41:			failFlag = 1;
        -:   42:		}
        -:   43:		else
        -:   44:		{	
        -:   45:			//Failed because random number generated is 2, 3, or 4
       35:   46:			printf("Test failed, game started correctly\n");
        -:   47:		}
        -:   48:	}
        -:   49:
        -:   50:	//PRINT message for test results
        1:   51:	if(failFlag == 1)
        -:   52:	{
        1:   53:		printf("\nTEST SUCCESSFULLY COMPLETED\n\n");
        -:   54:	}
        -:   55:	else
        -:   56:	{
    #####:   57:		printf("\nTESTING FAILED\n\n");
        -:   58:	}
        -:   59:
        1:   60:	return 0;
        -:   61:
        -:   62:}
        -:   63:
